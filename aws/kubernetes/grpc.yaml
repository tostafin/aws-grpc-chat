apiVersion: v1
kind: Namespace
metadata:
  name: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpc-server
  namespace: grpc
spec:
  selector:
    matchLabels:
      app: grpc-server
  replicas: 1
  template:
    metadata:
      labels:
        app: grpc-server
    spec:
      containers:
      - name: grpc-server
        image: $GRPC_SERVER_IMAGE
        imagePullPolicy: Always
        ports:
        - name: grpc-api
          containerPort: 9000
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "200m"
      - name: envoy-proxy
        image: $GRPC_ENVOY_IMAGE
        ports:
          - containerPort: 8080
            name: http
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "200m"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-server
  namespace: grpc
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
    name: grpc-api
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: envoy-port
  clusterIP: None
  selector:
    app: grpc-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpc-client
  namespace: grpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-client
  template:
    metadata:
      labels:
        app: grpc-client
    spec:
      containers:
        - name: grpc-client
          imagePullPolicy: Always
          image: $GRPC_CLIENT_IMAGE
          ports:
            - containerPort: 3000
      restartPolicy: Always
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: grpc-server-hpa
  namespace: grpc
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grpc-server
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-client
  namespace: grpc
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  clusterIP: None
  selector:
    app: grpc-client
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  name: grpc-ingress-proxy
  namespace: grpc
spec:
  ingressClassName: alb
  rules:
    - host: "$DOMAIN_NAME"
      http:
        paths:
          - path: /app
            pathType: Prefix
            backend:
              service:
                name: grpc-client
                port:
                  number: 3000
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grpc-server
                port:
                  number: 8080
